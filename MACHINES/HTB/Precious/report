PRECIOUS HTB	10.10.11.189	


===PORTS===========================
22	SSH
80	HTTP (nginx 1.18.0)
===================================


===DIRCTORY=BUSTING====================================
Nothing, really, nothing.......................nothing
=======================================================





On the webpage we are directed on a page called "PDF to webpage converter" with a input field where we are asked to provide a URL.
I've provided some url ike google, stackoverflow and few other but a error message pop out telling "cannot load remote URL".
The request intercepted is nothing special just field url with the string we provide on the input field so I will focus on the functionality
of the website itself.

I use python for the http.server module and try to give the attacker URL and worked it tae the url and transform to PDF, you can navigate
the filesystem and download the files. Interesting, there will be a trick to teh shell maybe, or well I think that's the only way.


Well we need more info on how the PDF spawned or better who spawn it, so I download locally the pdf and using exiftool (tool for metadata
reading) I discovered the author of the pdf, pdfkit v.0.8.6 which is vulnerable to Command Injection (https://security.snyk.io/vuln/SNYK-RUBY-PDFKIT-2869795), bingo!

The exploit of the vulnerability when we render a URL with parameter with user input, you can inject shell commands using that parameter

With a deeper research you can abuse the pdfkit version for gain a reverse shell with ruby language, so as you can see on screen.png,
I've opened the netcat listener, the python server and use curl for the request to the victim in details the request abuse the parameter
of the URL for a reverse shell in Ruby (http://[IP]/?name=%20'[ruby_reverse_shell]') this popout a shell in our nc listener.


===INITIAL=FOOTHOLD======================================
With the shell we got we are user "ruby" and we can't even see the user flag, this is why we need some PE to a normal user and than another PE
for root.

With some enumaration at first no info was usefull for our situation but maybe the Debian version (5.10.0) is vulnerable
to DirtyPipe which allows unprivileged users root access, but maybe will be usefull when I get user profile and not the ruby profile

Here was just a continue searching inside the home folder of the ruby profile, inside .bundle there is a config file
and with cat I found " henry:Q3c1AqGHtoI0aXAYFH ", cool use this credentials with ssh and we got our shell and user flag!




===PE====================================================
Now that we got our user shell we need to move on on root, let's try the dirty pipe I found before.....and nop wasn't working somehow.






